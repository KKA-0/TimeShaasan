version: "3.9"

services:
  # Kafka Configuration
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "ruok",
          "|",
          "nc",
          "localhost",
          "2181",
          "|",
          "grep",
          "imok",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    hostname: localhost
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "newUser:1:1"
    depends_on:
      zookeeper:
        condition: service_healthy
  # Auth Service and DB Configuration
  auth_mongo:
    image: mongo
    ports:
      - "4001:27017"
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth_service:
    container_name: auth_service
    build: ./Services/auth/.
    ports:
      - "5001:5001"
    depends_on:
      kafka:
        condition: service_started
      auth_mongo:
        condition: service_healthy
    environment:
      DB_URI: mongodb://auth_mongo:27017
      JWT_EXPIRES_IN: 60d
      SECRET: "${SECRET}"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/working"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Checklist Service and DB Configuration
  checklist_mongo:
    image: mongo
    ports:
      - "4002:27017"
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  checklist_service:
    container_name: checklist_service
    build: ./Services/checklist/.
    ports:
      - "5002:5002"
    depends_on:
      checklist_mongo:
        condition: service_healthy
    environment:
      DB_URI: "mongodb://checklist_mongo:27017"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/working"]
      interval: 30s
      timeout: 10s
      retries: 3

  # KanbanBoard Service and DB Configuration
  kanbanboard_mongo:
    image: mongo
    ports:
      - "4003:27017"
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  kanbanboard_service:
    container_name: kanbanboard_service
    build: ./Services/kanbanboard/.
    ports:
      - "5003:5003"
    depends_on:
      kafka:
        condition: service_started
      kanbanboard_mongo:
        condition: service_healthy
    environment:
      DB_URI: "mongodb://kanbanboard_mongo:27017"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/working"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Pomodoro Service and DB Configuration
  pomodoro_mongo:
    image: mongo
    ports:
      - "4004:27017"
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  pomodoro_service:
    container_name: pomodoro_service
    build: ./Services/pomodoro/.
    ports:
      - "5004:5004"
    depends_on:
      kafka:
        condition: service_started
      pomodoro_mongo:
        condition: service_healthy
    environment:
      DB_URI: "mongodb://pomodoro_mongo:27017"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/working"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Notify Service Configuration
  notify_service:
    container_name: notify_service
    build: ./Services/notification/.
    ports:
      - "5005:5005"
    depends_on:
      kafka:
        condition: service_started
    restart: always
    environment:
      HOST_NAME: "smtp.mailgun.org"
      USER_Name: "TimeShaasan"
      EMAIL: "timeshaasan-noreply@quantgam.com"
      PASS: "8fbb0e9618b29b76eb42bea0941a5e69-7a3af442-09aaf749"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/working"]
      interval: 30s
      timeout: 10s
      retries: 3

  Nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      auth_service:
        condition: service_healthy
      checklist_service:
        condition: service_healthy
      kanbanboard_service:
        condition: service_healthy
      pomodoro_service:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
