---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: default
  labels:
    app: zookeeper
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper-container
          image: wurstmeister/zookeeper # Using the Wurstmeister Zookeeper image
          resources:
            requests:
              cpu: 100m      # Minimum CPU allocation
              memory: 50Mi   # Minimum memory allocation
            limits:
              cpu: 250m      # Maximum CPU allocation
              memory: 200Mi  # Maximum memory allocation
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - 'echo ruok | nc localhost 2181 | grep imok' # Check if Zookeeper is healthy
            initialDelaySeconds: 15 # Delay before starting liveness checks
            periodSeconds: 30       # Frequency of liveness checks
          ports:
            - containerPort: 2181
              name: zookeeper-port # Zookeeper default port
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: default
spec:
  selector:
    app: zookeeper
  ports:
    - name: zookeeper-port
      protocol: TCP
      port: 2181
      targetPort: 2181 # Port exposed by the Zookeeper container
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: default
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox
          command: ['sh', '-c', 'until nc -z zookeeper-service.default.svc.cluster.local 2181; do echo waiting for zookeeper; sleep 2; done;']
          # Wait until Zookeeper is ready before starting Kafka
      containers:
        - name: kafka-container
          image: wurstmeister/kafka # Using the Wurstmeister Kafka image
          resources:
            requests:
              cpu: 100m       # Minimum CPU allocation
              memory: 512Mi   # Minimum memory allocation
            limits:
              cpu: 500m       # Maximum CPU allocation
              memory: 1Gi     # Maximum memory allocation
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - 'nc -z localhost 9092' # Check if Kafka is healthy
            initialDelaySeconds: 10 # Delay before starting liveness checks
            periodSeconds: 30       # Frequency of liveness checks
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-service:9092,OUTSIDE://kafka-service:9093" # Advertised listeners
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093" # Listener configuration
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181" # Zookeeper connection string
            - name: KAFKA_CREATE_TOPICS
              value: "newUser:1:1" # Create a topic named "newUser" with 1 partition and 1 replica
          ports:
            - containerPort: 9092
              name: kafka-port # Kafka default port

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: default
spec:
  selector:
    app: kafka
  ports:
    - name: kafka-port
      protocol: TCP
      port: 9092
      targetPort: 9092 # Port exposed by the Kafka container
